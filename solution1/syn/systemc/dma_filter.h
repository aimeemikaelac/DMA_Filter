// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _dma_filter_HH_
#define _dma_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dma_filter_AXILiteS_s_axi.h"
#include "dma_filter_output_config_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_CONFIG_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_CONFIG_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_CONFIG_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_CONFIG_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_CONFIG_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_CONFIG_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_CONFIG_BUSER_WIDTH = 1>
struct dma_filter : public sc_module {
    // Port declarations 69
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_output_config_AWVALID;
    sc_in< sc_logic > m_axi_output_config_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_ADDR_WIDTH> > m_axi_output_config_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_ID_WIDTH> > m_axi_output_config_AWID;
    sc_out< sc_lv<8> > m_axi_output_config_AWLEN;
    sc_out< sc_lv<3> > m_axi_output_config_AWSIZE;
    sc_out< sc_lv<2> > m_axi_output_config_AWBURST;
    sc_out< sc_lv<2> > m_axi_output_config_AWLOCK;
    sc_out< sc_lv<4> > m_axi_output_config_AWCACHE;
    sc_out< sc_lv<3> > m_axi_output_config_AWPROT;
    sc_out< sc_lv<4> > m_axi_output_config_AWQOS;
    sc_out< sc_lv<4> > m_axi_output_config_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_AWUSER_WIDTH> > m_axi_output_config_AWUSER;
    sc_out< sc_logic > m_axi_output_config_WVALID;
    sc_in< sc_logic > m_axi_output_config_WREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH> > m_axi_output_config_WDATA;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH/8> > m_axi_output_config_WSTRB;
    sc_out< sc_logic > m_axi_output_config_WLAST;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_ID_WIDTH> > m_axi_output_config_WID;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_WUSER_WIDTH> > m_axi_output_config_WUSER;
    sc_out< sc_logic > m_axi_output_config_ARVALID;
    sc_in< sc_logic > m_axi_output_config_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_ADDR_WIDTH> > m_axi_output_config_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_ID_WIDTH> > m_axi_output_config_ARID;
    sc_out< sc_lv<8> > m_axi_output_config_ARLEN;
    sc_out< sc_lv<3> > m_axi_output_config_ARSIZE;
    sc_out< sc_lv<2> > m_axi_output_config_ARBURST;
    sc_out< sc_lv<2> > m_axi_output_config_ARLOCK;
    sc_out< sc_lv<4> > m_axi_output_config_ARCACHE;
    sc_out< sc_lv<3> > m_axi_output_config_ARPROT;
    sc_out< sc_lv<4> > m_axi_output_config_ARQOS;
    sc_out< sc_lv<4> > m_axi_output_config_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_CONFIG_ARUSER_WIDTH> > m_axi_output_config_ARUSER;
    sc_in< sc_logic > m_axi_output_config_RVALID;
    sc_out< sc_logic > m_axi_output_config_RREADY;
    sc_in< sc_uint<C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH> > m_axi_output_config_RDATA;
    sc_in< sc_logic > m_axi_output_config_RLAST;
    sc_in< sc_uint<C_M_AXI_OUTPUT_CONFIG_ID_WIDTH> > m_axi_output_config_RID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_CONFIG_RUSER_WIDTH> > m_axi_output_config_RUSER;
    sc_in< sc_lv<2> > m_axi_output_config_RRESP;
    sc_in< sc_logic > m_axi_output_config_BVALID;
    sc_out< sc_logic > m_axi_output_config_BREADY;
    sc_in< sc_lv<2> > m_axi_output_config_BRESP;
    sc_in< sc_uint<C_M_AXI_OUTPUT_CONFIG_ID_WIDTH> > m_axi_output_config_BID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_CONFIG_BUSER_WIDTH> > m_axi_output_config_BUSER;
    sc_in< sc_logic > reset;


    // Module declarations
    dma_filter(sc_module_name name);
    SC_HAS_PROCESS(dma_filter);

    ~dma_filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dma_filter_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* dma_filter_AXILiteS_s_axi_U;
    dma_filter_output_config_m_axi<32,32,2,C_M_AXI_OUTPUT_CONFIG_ID_WIDTH,C_M_AXI_OUTPUT_CONFIG_ADDR_WIDTH,C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH,C_M_AXI_OUTPUT_CONFIG_AWUSER_WIDTH,C_M_AXI_OUTPUT_CONFIG_ARUSER_WIDTH,C_M_AXI_OUTPUT_CONFIG_WUSER_WIDTH,C_M_AXI_OUTPUT_CONFIG_RUSER_WIDTH,C_M_AXI_OUTPUT_CONFIG_BUSER_WIDTH,C_M_AXI_OUTPUT_CONFIG_TARGET_ADDR,C_M_AXI_OUTPUT_CONFIG_USER_VALUE,C_M_AXI_OUTPUT_CONFIG_PROT_VALUE,C_M_AXI_OUTPUT_CONFIG_CACHE_VALUE>* dma_filter_output_config_m_axi_U;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_lv<32> > minAddress;
    sc_signal< sc_logic > output_config_AWVALID;
    sc_signal< sc_logic > output_config_AWREADY;
    sc_signal< sc_lv<32> > output_config_AWADDR;
    sc_signal< sc_lv<1> > output_config_AWID;
    sc_signal< sc_lv<32> > output_config_AWLEN;
    sc_signal< sc_lv<3> > output_config_AWSIZE;
    sc_signal< sc_lv<2> > output_config_AWBURST;
    sc_signal< sc_lv<2> > output_config_AWLOCK;
    sc_signal< sc_lv<4> > output_config_AWCACHE;
    sc_signal< sc_lv<3> > output_config_AWPROT;
    sc_signal< sc_lv<4> > output_config_AWQOS;
    sc_signal< sc_lv<4> > output_config_AWREGION;
    sc_signal< sc_lv<1> > output_config_AWUSER;
    sc_signal< sc_logic > output_config_WVALID;
    sc_signal< sc_logic > output_config_WREADY;
    sc_signal< sc_lv<32> > output_config_WDATA;
    sc_signal< sc_lv<4> > output_config_WSTRB;
    sc_signal< sc_logic > output_config_WLAST;
    sc_signal< sc_lv<1> > output_config_WID;
    sc_signal< sc_lv<1> > output_config_WUSER;
    sc_signal< sc_logic > output_config_ARVALID;
    sc_signal< sc_logic > output_config_ARREADY;
    sc_signal< sc_lv<32> > output_config_ARADDR;
    sc_signal< sc_lv<1> > output_config_ARID;
    sc_signal< sc_lv<32> > output_config_ARLEN;
    sc_signal< sc_lv<3> > output_config_ARSIZE;
    sc_signal< sc_lv<2> > output_config_ARBURST;
    sc_signal< sc_lv<2> > output_config_ARLOCK;
    sc_signal< sc_lv<4> > output_config_ARCACHE;
    sc_signal< sc_lv<3> > output_config_ARPROT;
    sc_signal< sc_lv<4> > output_config_ARQOS;
    sc_signal< sc_lv<4> > output_config_ARREGION;
    sc_signal< sc_lv<1> > output_config_ARUSER;
    sc_signal< sc_logic > output_config_RVALID;
    sc_signal< sc_logic > output_config_RREADY;
    sc_signal< sc_lv<32> > output_config_RDATA;
    sc_signal< sc_logic > output_config_RLAST;
    sc_signal< sc_lv<1> > output_config_RID;
    sc_signal< sc_lv<1> > output_config_RUSER;
    sc_signal< sc_lv<2> > output_config_RRESP;
    sc_signal< sc_logic > output_config_BVALID;
    sc_signal< sc_logic > output_config_BREADY;
    sc_signal< sc_lv<2> > output_config_BRESP;
    sc_signal< sc_lv<1> > output_config_BID;
    sc_signal< sc_lv<1> > output_config_BUSER;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const int C_DATA_WIDTH;
    static const int C_M_AXI_OUTPUT_CONFIG_TARGET_ADDR;
    static const int C_M_AXI_OUTPUT_CONFIG_USER_VALUE;
    static const int C_M_AXI_OUTPUT_CONFIG_PROT_VALUE;
    static const int C_M_AXI_OUTPUT_CONFIG_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_output_config_ARADDR();
    void thread_output_config_ARBURST();
    void thread_output_config_ARCACHE();
    void thread_output_config_ARID();
    void thread_output_config_ARLEN();
    void thread_output_config_ARLOCK();
    void thread_output_config_ARPROT();
    void thread_output_config_ARQOS();
    void thread_output_config_ARREGION();
    void thread_output_config_ARSIZE();
    void thread_output_config_ARUSER();
    void thread_output_config_ARVALID();
    void thread_output_config_AWADDR();
    void thread_output_config_AWBURST();
    void thread_output_config_AWCACHE();
    void thread_output_config_AWID();
    void thread_output_config_AWLEN();
    void thread_output_config_AWLOCK();
    void thread_output_config_AWPROT();
    void thread_output_config_AWQOS();
    void thread_output_config_AWREGION();
    void thread_output_config_AWSIZE();
    void thread_output_config_AWUSER();
    void thread_output_config_AWVALID();
    void thread_output_config_BREADY();
    void thread_output_config_RREADY();
    void thread_output_config_WDATA();
    void thread_output_config_WID();
    void thread_output_config_WLAST();
    void thread_output_config_WSTRB();
    void thread_output_config_WUSER();
    void thread_output_config_WVALID();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
