// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dma_filter,hls_ip_2014_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module dma_filter (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_output_config_AWVALID,
        m_axi_output_config_AWREADY,
        m_axi_output_config_AWADDR,
        m_axi_output_config_AWID,
        m_axi_output_config_AWLEN,
        m_axi_output_config_AWSIZE,
        m_axi_output_config_AWBURST,
        m_axi_output_config_AWLOCK,
        m_axi_output_config_AWCACHE,
        m_axi_output_config_AWPROT,
        m_axi_output_config_AWQOS,
        m_axi_output_config_AWREGION,
        m_axi_output_config_AWUSER,
        m_axi_output_config_WVALID,
        m_axi_output_config_WREADY,
        m_axi_output_config_WDATA,
        m_axi_output_config_WSTRB,
        m_axi_output_config_WLAST,
        m_axi_output_config_WID,
        m_axi_output_config_WUSER,
        m_axi_output_config_ARVALID,
        m_axi_output_config_ARREADY,
        m_axi_output_config_ARADDR,
        m_axi_output_config_ARID,
        m_axi_output_config_ARLEN,
        m_axi_output_config_ARSIZE,
        m_axi_output_config_ARBURST,
        m_axi_output_config_ARLOCK,
        m_axi_output_config_ARCACHE,
        m_axi_output_config_ARPROT,
        m_axi_output_config_ARQOS,
        m_axi_output_config_ARREGION,
        m_axi_output_config_ARUSER,
        m_axi_output_config_RVALID,
        m_axi_output_config_RREADY,
        m_axi_output_config_RDATA,
        m_axi_output_config_RLAST,
        m_axi_output_config_RID,
        m_axi_output_config_RUSER,
        m_axi_output_config_RRESP,
        m_axi_output_config_BVALID,
        m_axi_output_config_BREADY,
        m_axi_output_config_BRESP,
        m_axi_output_config_BID,
        m_axi_output_config_BUSER,
        reset
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 1'b0;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_CONFIG_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_CONFIG_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_CONFIG_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_CONFIG_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_CONFIG_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_CONFIG_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_CONFIG_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_CONFIG_TARGET_ADDR = 0;
parameter    C_M_AXI_OUTPUT_CONFIG_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT_CONFIG_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT_CONFIG_CACHE_VALUE = 3;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_OUTPUT_CONFIG_WSTRB_WIDTH = (C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_output_config_AWVALID;
input   m_axi_output_config_AWREADY;
output  [C_M_AXI_OUTPUT_CONFIG_ADDR_WIDTH - 1 : 0] m_axi_output_config_AWADDR;
output  [C_M_AXI_OUTPUT_CONFIG_ID_WIDTH - 1 : 0] m_axi_output_config_AWID;
output  [7:0] m_axi_output_config_AWLEN;
output  [2:0] m_axi_output_config_AWSIZE;
output  [1:0] m_axi_output_config_AWBURST;
output  [1:0] m_axi_output_config_AWLOCK;
output  [3:0] m_axi_output_config_AWCACHE;
output  [2:0] m_axi_output_config_AWPROT;
output  [3:0] m_axi_output_config_AWQOS;
output  [3:0] m_axi_output_config_AWREGION;
output  [C_M_AXI_OUTPUT_CONFIG_AWUSER_WIDTH - 1 : 0] m_axi_output_config_AWUSER;
output   m_axi_output_config_WVALID;
input   m_axi_output_config_WREADY;
output  [C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH - 1 : 0] m_axi_output_config_WDATA;
output  [C_M_AXI_OUTPUT_CONFIG_WSTRB_WIDTH - 1 : 0] m_axi_output_config_WSTRB;
output   m_axi_output_config_WLAST;
output  [C_M_AXI_OUTPUT_CONFIG_ID_WIDTH - 1 : 0] m_axi_output_config_WID;
output  [C_M_AXI_OUTPUT_CONFIG_WUSER_WIDTH - 1 : 0] m_axi_output_config_WUSER;
output   m_axi_output_config_ARVALID;
input   m_axi_output_config_ARREADY;
output  [C_M_AXI_OUTPUT_CONFIG_ADDR_WIDTH - 1 : 0] m_axi_output_config_ARADDR;
output  [C_M_AXI_OUTPUT_CONFIG_ID_WIDTH - 1 : 0] m_axi_output_config_ARID;
output  [7:0] m_axi_output_config_ARLEN;
output  [2:0] m_axi_output_config_ARSIZE;
output  [1:0] m_axi_output_config_ARBURST;
output  [1:0] m_axi_output_config_ARLOCK;
output  [3:0] m_axi_output_config_ARCACHE;
output  [2:0] m_axi_output_config_ARPROT;
output  [3:0] m_axi_output_config_ARQOS;
output  [3:0] m_axi_output_config_ARREGION;
output  [C_M_AXI_OUTPUT_CONFIG_ARUSER_WIDTH - 1 : 0] m_axi_output_config_ARUSER;
input   m_axi_output_config_RVALID;
output   m_axi_output_config_RREADY;
input  [C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH - 1 : 0] m_axi_output_config_RDATA;
input   m_axi_output_config_RLAST;
input  [C_M_AXI_OUTPUT_CONFIG_ID_WIDTH - 1 : 0] m_axi_output_config_RID;
input  [C_M_AXI_OUTPUT_CONFIG_RUSER_WIDTH - 1 : 0] m_axi_output_config_RUSER;
input  [1:0] m_axi_output_config_RRESP;
input   m_axi_output_config_BVALID;
output   m_axi_output_config_BREADY;
input  [1:0] m_axi_output_config_BRESP;
input  [C_M_AXI_OUTPUT_CONFIG_ID_WIDTH - 1 : 0] m_axi_output_config_BID;
input  [C_M_AXI_OUTPUT_CONFIG_BUSER_WIDTH - 1 : 0] m_axi_output_config_BUSER;
input   reset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg   [0:0] ap_CS_fsm = 1'b0;
wire   [31:0] minAddress;
wire    output_config_AWVALID;
wire    output_config_AWREADY;
wire   [31:0] output_config_AWADDR;
wire   [0:0] output_config_AWID;
wire   [31:0] output_config_AWLEN;
wire   [2:0] output_config_AWSIZE;
wire   [1:0] output_config_AWBURST;
wire   [1:0] output_config_AWLOCK;
wire   [3:0] output_config_AWCACHE;
wire   [2:0] output_config_AWPROT;
wire   [3:0] output_config_AWQOS;
wire   [3:0] output_config_AWREGION;
wire   [0:0] output_config_AWUSER;
wire    output_config_WVALID;
wire    output_config_WREADY;
wire   [31:0] output_config_WDATA;
wire   [3:0] output_config_WSTRB;
wire    output_config_WLAST;
wire   [0:0] output_config_WID;
wire   [0:0] output_config_WUSER;
wire    output_config_ARVALID;
wire    output_config_ARREADY;
wire   [31:0] output_config_ARADDR;
wire   [0:0] output_config_ARID;
wire   [31:0] output_config_ARLEN;
wire   [2:0] output_config_ARSIZE;
wire   [1:0] output_config_ARBURST;
wire   [1:0] output_config_ARLOCK;
wire   [3:0] output_config_ARCACHE;
wire   [2:0] output_config_ARPROT;
wire   [3:0] output_config_ARQOS;
wire   [3:0] output_config_ARREGION;
wire   [0:0] output_config_ARUSER;
wire    output_config_RVALID;
wire    output_config_RREADY;
wire   [31:0] output_config_RDATA;
wire    output_config_RLAST;
wire   [0:0] output_config_RID;
wire   [0:0] output_config_RUSER;
wire   [1:0] output_config_RRESP;
wire    output_config_BVALID;
wire    output_config_BREADY;
wire   [1:0] output_config_BRESP;
wire   [0:0] output_config_BID;
wire   [0:0] output_config_BUSER;
reg   [0:0] ap_NS_fsm;


dma_filter_AXILiteS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
dma_filter_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .minAddress( minAddress )
);

dma_filter_output_config_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 2 ),
    .C_ID_WIDTH( C_M_AXI_OUTPUT_CONFIG_ID_WIDTH ),
    .C_ADDR_WIDTH( C_M_AXI_OUTPUT_CONFIG_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_M_AXI_OUTPUT_CONFIG_DATA_WIDTH ),
    .C_AWUSER_WIDTH( C_M_AXI_OUTPUT_CONFIG_AWUSER_WIDTH ),
    .C_ARUSER_WIDTH( C_M_AXI_OUTPUT_CONFIG_ARUSER_WIDTH ),
    .C_WUSER_WIDTH( C_M_AXI_OUTPUT_CONFIG_WUSER_WIDTH ),
    .C_RUSER_WIDTH( C_M_AXI_OUTPUT_CONFIG_RUSER_WIDTH ),
    .C_BUSER_WIDTH( C_M_AXI_OUTPUT_CONFIG_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUTPUT_CONFIG_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUTPUT_CONFIG_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT_CONFIG_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT_CONFIG_CACHE_VALUE ))
dma_filter_output_config_m_axi_U(
    .AWVALID( m_axi_output_config_AWVALID ),
    .AWREADY( m_axi_output_config_AWREADY ),
    .AWADDR( m_axi_output_config_AWADDR ),
    .AWID( m_axi_output_config_AWID ),
    .AWLEN( m_axi_output_config_AWLEN ),
    .AWSIZE( m_axi_output_config_AWSIZE ),
    .AWBURST( m_axi_output_config_AWBURST ),
    .AWLOCK( m_axi_output_config_AWLOCK ),
    .AWCACHE( m_axi_output_config_AWCACHE ),
    .AWPROT( m_axi_output_config_AWPROT ),
    .AWQOS( m_axi_output_config_AWQOS ),
    .AWREGION( m_axi_output_config_AWREGION ),
    .AWUSER( m_axi_output_config_AWUSER ),
    .WVALID( m_axi_output_config_WVALID ),
    .WREADY( m_axi_output_config_WREADY ),
    .WDATA( m_axi_output_config_WDATA ),
    .WSTRB( m_axi_output_config_WSTRB ),
    .WLAST( m_axi_output_config_WLAST ),
    .WID( m_axi_output_config_WID ),
    .WUSER( m_axi_output_config_WUSER ),
    .ARVALID( m_axi_output_config_ARVALID ),
    .ARREADY( m_axi_output_config_ARREADY ),
    .ARADDR( m_axi_output_config_ARADDR ),
    .ARID( m_axi_output_config_ARID ),
    .ARLEN( m_axi_output_config_ARLEN ),
    .ARSIZE( m_axi_output_config_ARSIZE ),
    .ARBURST( m_axi_output_config_ARBURST ),
    .ARLOCK( m_axi_output_config_ARLOCK ),
    .ARCACHE( m_axi_output_config_ARCACHE ),
    .ARPROT( m_axi_output_config_ARPROT ),
    .ARQOS( m_axi_output_config_ARQOS ),
    .ARREGION( m_axi_output_config_ARREGION ),
    .ARUSER( m_axi_output_config_ARUSER ),
    .RVALID( m_axi_output_config_RVALID ),
    .RREADY( m_axi_output_config_RREADY ),
    .RDATA( m_axi_output_config_RDATA ),
    .RLAST( m_axi_output_config_RLAST ),
    .RID( m_axi_output_config_RID ),
    .RUSER( m_axi_output_config_RUSER ),
    .RRESP( m_axi_output_config_RRESP ),
    .BVALID( m_axi_output_config_BVALID ),
    .BREADY( m_axi_output_config_BREADY ),
    .BRESP( m_axi_output_config_BRESP ),
    .BID( m_axi_output_config_BID ),
    .BUSER( m_axi_output_config_BUSER ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .I_ARVALID( output_config_ARVALID ),
    .I_ARREADY( output_config_ARREADY ),
    .I_ARADDR( output_config_ARADDR ),
    .I_ARID( output_config_ARID ),
    .I_ARLEN( output_config_ARLEN ),
    .I_ARSIZE( output_config_ARSIZE ),
    .I_ARLOCK( output_config_ARLOCK ),
    .I_ARCACHE( output_config_ARCACHE ),
    .I_ARQOS( output_config_ARQOS ),
    .I_ARPROT( output_config_ARPROT ),
    .I_ARUSER( output_config_ARUSER ),
    .I_ARBURST( output_config_ARBURST ),
    .I_ARREGION( output_config_ARREGION ),
    .I_RVALID( output_config_RVALID ),
    .I_RREADY( output_config_RREADY ),
    .I_RDATA( output_config_RDATA ),
    .I_RID( output_config_RID ),
    .I_RUSER( output_config_RUSER ),
    .I_RRESP( output_config_RRESP ),
    .I_RLAST( output_config_RLAST ),
    .I_AWVALID( output_config_AWVALID ),
    .I_AWREADY( output_config_AWREADY ),
    .I_AWADDR( output_config_AWADDR ),
    .I_AWID( output_config_AWID ),
    .I_AWLEN( output_config_AWLEN ),
    .I_AWSIZE( output_config_AWSIZE ),
    .I_AWLOCK( output_config_AWLOCK ),
    .I_AWCACHE( output_config_AWCACHE ),
    .I_AWQOS( output_config_AWQOS ),
    .I_AWPROT( output_config_AWPROT ),
    .I_AWUSER( output_config_AWUSER ),
    .I_AWBURST( output_config_AWBURST ),
    .I_AWREGION( output_config_AWREGION ),
    .I_WVALID( output_config_WVALID ),
    .I_WREADY( output_config_WREADY ),
    .I_WDATA( output_config_WDATA ),
    .I_WID( output_config_WID ),
    .I_WUSER( output_config_WUSER ),
    .I_WLAST( output_config_WLAST ),
    .I_WSTRB( output_config_WSTRB ),
    .I_BVALID( output_config_BVALID ),
    .I_BREADY( output_config_BREADY ),
    .I_BRESP( output_config_BRESP ),
    .I_BID( output_config_BID ),
    .I_BUSER( output_config_BUSER )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n == 1'b0) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign output_config_ARADDR = ap_const_lv32_0;
assign output_config_ARBURST = ap_const_lv2_0;
assign output_config_ARCACHE = ap_const_lv4_0;
assign output_config_ARID = ap_const_lv1_0;
assign output_config_ARLEN = ap_const_lv32_0;
assign output_config_ARLOCK = ap_const_lv2_0;
assign output_config_ARPROT = ap_const_lv3_0;
assign output_config_ARQOS = ap_const_lv4_0;
assign output_config_ARREGION = ap_const_lv4_0;
assign output_config_ARSIZE = ap_const_lv3_0;
assign output_config_ARUSER = ap_const_lv1_0;
assign output_config_ARVALID = ap_const_logic_0;
assign output_config_AWADDR = ap_const_lv32_0;
assign output_config_AWBURST = ap_const_lv2_0;
assign output_config_AWCACHE = ap_const_lv4_0;
assign output_config_AWID = ap_const_lv1_0;
assign output_config_AWLEN = ap_const_lv32_0;
assign output_config_AWLOCK = ap_const_lv2_0;
assign output_config_AWPROT = ap_const_lv3_0;
assign output_config_AWQOS = ap_const_lv4_0;
assign output_config_AWREGION = ap_const_lv4_0;
assign output_config_AWSIZE = ap_const_lv3_0;
assign output_config_AWUSER = ap_const_lv1_0;
assign output_config_AWVALID = ap_const_logic_0;
assign output_config_BREADY = ap_const_logic_0;
assign output_config_RREADY = ap_const_logic_0;
assign output_config_WDATA = ap_const_lv32_0;
assign output_config_WID = ap_const_lv1_0;
assign output_config_WLAST = ap_const_logic_0;
assign output_config_WSTRB = ap_const_lv4_0;
assign output_config_WUSER = ap_const_lv1_0;
assign output_config_WVALID = ap_const_logic_0;


endmodule //dma_filter

